#졍렬 알고리즘
#버블 데이터 인전 요소끼리 비교하고,swap 연산을 수행하며 정렬하는 방식
#선택 대상에서 가장 크거난 작은 데이터를 찾아가 선택을 반복하면서 정렬하는 방식
#삽입 대상을 선택해 정렬된 영역에서 선택 데이터의 적절한 위치를 찾아 삽입하면서 정렬하는 방식
#퀵   pivot 값을 선정해 해당 값을 기준으로 정렬하는 방식
#병합 이미 정렬된 부분 집합들을 효율적으로 병합해 전체를 정렬하는 방식
#기수 데이터의 자릿수를 바탕으로 비교해 데이터를 정렬하는 방식

#버블 정렬 과정
#1. 비교 연산이 필요한 루프 범위를 설정한다.
#2. 인접한 데이터 값을 비교한다
#3. swap 조건에 부합하면 swap 연산을 수행함
#4. 루프 범위가 끝날 때까지 2~3의 과정을 반복
#5. 정렬 영역을 설정한다. 다음 루프를 실행할 때는 이 영역을 제외한다.
#6. 비교 대상이 없을 때까지 1~5를 반복한다

#백준 1377 버블정렬
#버블 정렬의 swap이 한 번도 일어나지 않은 루프를 찾는 문제이다 파이썬의 sort() 함수를 사용 정렬 전 idex-정렬 후 index가 가장 큰 값을 찾아야함

import sys
input = sys.stdin.readline

N = int(input())
a = [] #a는 클래스를 데이터로 갖는 리스트

for i in range(N):
    a.append((int(input()),i)) # 정렬 기준을 고려하여 데이터, index 순서로 저장
    
Max = 0
sorted_a = sorted(a)

for i in range(N):
    if Max < sorted_a[i][1]-i: #정렬 전 index- 정렬 후 index 계산의 최댓값을 계산
        Max = sorted_a[i][1]-i
        
print(Max+1)
